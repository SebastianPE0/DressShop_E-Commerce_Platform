name: CI/CD Pipeline for Microservices

on:
  push:
    branches:
      - Feature_BackEnd_CategoryDomain_AddMicroservice_DeleteCategory

jobs:
  # ðŸ›  Build and Push create-category
  build-and-push-create:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build and push create-category
        uses: docker/build-push-action@v4
        with:
          context: ./BackEnd/Domains/Categories/CreateCategory
          file: ./BackEnd/Domains/Categories/CreateCategory/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/create-category:latest

  # ðŸ›  Build and Push update-category
  build-and-push-update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build and push update-category
        uses: docker/build-push-action@v4
        with:
          context: ./BackEnd/Domains/Categories/UpdateCategory
          file: ./BackEnd/Domains/Categories/UpdateCategory/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/update-category:latest

  # ðŸ›  Build and Push delete-category
  build-and-push-delete:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build and push delete-category
        uses: docker/build-push-action@v4
        with:
          context: ./BackEnd/Domains/Categories/DeleteCategory
          file: ./BackEnd/Domains/Categories/DeleteCategory/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/delete-category:latest

  # ðŸ›  Build and Push get-products-by-category
  build-and-push-get-products:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build and push get-products-by-category
        uses: docker/build-push-action@v4
        with:
          context: ./BackEnd/Domains/Products/GetProductsByCategory
          file: ./BackEnd/Domains/Products/GetProductsByCategory/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/get-products-by-category:latest

  # ðŸ›  Build and Push graphql-gateway
  build-and-push-graphql:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build and push graphql-gateway
        uses: docker/build-push-action@v4
        with:
          context: ./BackEnd/Domains/GraphQL-Gateway
          file: ./BackEnd/Domains/GraphQL-Gateway/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/graphql-gateway:latest

  # ðŸš€ Deploy delete-category (Depende de GraphQL y GetProductsByCategory)
  deploy-delete-category:
    needs: [build-and-push-delete, deploy-graphql, deploy-get-products]
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to DeleteCategory QA
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_DNS_DELETECATEGORY_QA }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo docker stop delete-category || true
            sudo docker rm delete-category || true
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/delete-category:latest
            sudo docker run -d --name delete-category --network host \
              -e MONGO_URI="${{ secrets.MONGO_URI }}" \
              -e GRAPHQL_SERVICE_URL="http://${{ secrets.HOST_DNS_GRAPHQL_QA }}/graphql" \
              ${{ secrets.DOCKERHUB_USERNAME }}/delete-category:latest

  # ðŸš€ Deploy get-products-by-category
  deploy-get-products:
    needs: build-and-push-get-products
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GetProductsByCategory QA
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_DNS_GETPRODUCTSBYCATEGORY_QA }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo docker stop get-products-by-category || true
            sudo docker rm get-products-by-category || true
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/get-products-by-category:latest
            sudo docker run -d --name get-products-by-category --network host \
              -e MONGO_URI="${{ secrets.MONGO_URI_PRODUCT }}" \
              ${{ secrets.DOCKERHUB_USERNAME }}/get-products-by-category:latest

  # ðŸš€ Deploy graphql-gateway (Depende de GetProductsByCategory)
  deploy-graphql:
    needs: [build-and-push-graphql, deploy-get-products]
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GraphQL QA
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_DNS_GRAPHQL_QA }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo docker stop graphql-gateway || true
            sudo docker rm graphql-gateway || true
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/graphql-gateway:latest
            sudo docker run -d --name graphql-gateway --network host \
              -e CATEGORY_SERVICE_URL="http://${{ secrets.HOST_DNS_GETBYIDCATEGORY_QA }}/category" \
              -e PRODUCT_SERVICE_URL="http://${{ secrets.HOST_DNS_GETPRODUCTSBYCATEGORY_QA }}/products/by-category" \
              ${{ secrets.DOCKERHUB_USERNAME }}/graphql-gateway:latest
