name: CI/CD Pipeline for Category Services

on:
  push:
    branches:
      - Feature_CategoryDomain_GetAllCategories
    paths:
      - 'BackEnd/Domains/Categories/CreateCategory/**'
      - 'BackEnd/Domains/Categories/GetAllCategories/**'
      - 'BackEnd/Domains/Categories/GetCategoryById/**'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: 
          - createcategory
          - getallcategories
          - getbyidcategory
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build Docker image for ${{ matrix.service }}
        run: docker build -t sebastianperez02/${{ matrix.service }} -f BackEnd/Domains/Categories/${{ matrix.service }}/Dockerfile .

      - name: Push Docker image to DockerHub
        run: docker push sebastianperez02/${{ matrix.service }}:latest

  deploy-to-ec2:
    needs: build-and-push
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [createcategory, getallcategories, getbyidcategory]
    steps:
      - name: Set environment variables for ${{ matrix.service }}
        run: |
          if [[ "${{ matrix.service }}" == "createcategory" ]]; then
            echo "HOST_DNS=${{ secrets.HOST_DNS_CREATECATEGORY_QA }}" >> $GITHUB_ENV
          elif [[ "${{ matrix.service }}" == "getallcategories" ]]; then
            echo "HOST_DNS=${{ secrets.HOST_DNS_GETALLCATEGORIES_QA }}" >> $GITHUB_ENV
          elif [[ "${{ matrix.service }}" == "getbyidcategory" ]]; then
            echo "HOST_DNS=${{ secrets.HOST_DNS_GETBYIDCATEGORY_QA }}" >> $GITHUB_ENV
          fi

      - name: Deploy to EC2 for ${{ matrix.service }}
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.HOST_DNS }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo apt update -y
            sudo apt install -y docker.io
            sudo systemctl start docker
            sudo systemctl enable docker
            sudo usermod -aG docker $USER
            sudo chmod 666 /var/run/docker.sock

            docker pull sebastianperez02/${{ matrix.service }}:latest
            docker stop ${{ matrix.service }}-service || true
            docker rm ${{ matrix.service }}-service || true

            docker run -d --name ${{ matrix.service }}-service --network host \
              -e MONGO_URI="${{ secrets.MONGO_URI }}" \
              sebastianperez02/${{ matrix.service }}:latest
