name: CI/CD Pipeline for Category Services

on:
  push:
    branches:
      - Feature_CategoryDomain_GetAllCategories
    paths:
      - 'BackEnd/Domains/Categories/CreateCategory/**'
      - 'BackEnd/Domains/Categories/GetAllCategories/**'
      - 'BackEnd/Domains/Categories/GetCategoryById/**'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: 
          - { name: "create-category", path: "CreateCategory", image: "sebastianperez02/create-category" }
          - { name: "get-all-categories", path: "GetAllCategories", image: "sebastianperez02/get-all-categories" }
          - { name: "get-byid-category", path: "GetCategoryById", image: "sebastianperez02/get-byid-category" }

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build Docker image for ${{ matrix.service.name }}
        run: |
          cd BackEnd/Domains/Categories/${{ matrix.service.path }}
          docker build -t ${{ matrix.service.image }} .

      - name: Push Docker image to DockerHub
        run: docker push ${{ matrix.service.image }}:latest

  deploy-to-ec2:
    needs: build-and-push
    runs-on: ubuntu-latest
    strategy:
      matrix:
        deployment:
          - { name: "create-category", host: "HOST_DNS_CREATECATEGORY_QA", image: "sebastianperez02/create-category" }
          - { name: "get-all-categories", host: "HOST_DNS_GETALLCATEGORIES_QA", image: "sebastianperez02/get-all-categories" }
          - { name: "get-byid-category", host: "HOST_DNS_GETBYIDCATEGORY_QA", image: "sebastianperez02/get-byid-category" }

    steps:
      - name: Deploy to ${{ matrix.deployment.name }} EC2 instance
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets[ matrix.deployment.host ] }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo apt update -y
            sudo apt install -y docker.io
            sudo systemctl start docker
            sudo systemctl enable docker
            sudo usermod -aG docker $USER
            sudo chmod 666 /var/run/docker.sock

            docker pull ${{ matrix.deployment.image }}:latest
            docker stop ${{ matrix.deployment.name }} || true
            docker rm ${{ matrix.deployment.name }} || true
            docker run -d --name ${{ matrix.deployment.name }} --network host \
              -e MONGO_URI="${{ secrets.MONGO_URI }}" \
              ${{ matrix.deployment.image }}:latest
