name: CI/CD Pipeline for Microservices

on:
  push:
    branches:
      - Feature_BackEnd_CategoryDomain_AddMicroservice_DeleteCategory
      - Feature_CategoryDomain_GetAllCategories

jobs:
  # ðŸ›  Build and Push create-category
  build-and-push-create:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build and push create-category
        uses: docker/build-push-action@v4
        with:
          context: ./BackEnd/Domains/Categories/CreateCategory
          file: ./BackEnd/Domains/Categories/CreateCategory/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/create-category:latest

  # ðŸ›  Build and Push update-category
  build-and-push-update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build and push update-category
        uses: docker/build-push-action@v4
        with:
          context: ./BackEnd/Domains/Categories/UpdateCategory
          file: ./BackEnd/Domains/Categories/UpdateCategory/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/update-category:latest

  # ðŸ›  Build and Push delete-category
  build-and-push-delete:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build and push delete-category
        uses: docker/build-push-action@v4
        with:
          context: ./BackEnd/Domains/Categories/DeleteCategory
          file: ./BackEnd/Domains/Categories/DeleteCategory/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/delete-category:latest

  # ðŸ›  Build and Push get-products-by-category
  build-and-push-get-products:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build and push get-products-by-category
        uses: docker/build-push-action@v4
        with:
          context: ./BackEnd/Domains/Products/GetProductsByCategory
          file: ./BackEnd/Domains/Products/GetProductsByCategory/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/get-products-by-category:latest

  # ðŸ›  Build and Push create-product
  build-and-push-createproduct:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build and push create-product
        uses: docker/build-push-action@v4
        with:
          context: ./BackEnd/Domains/Products/CreateProduct
          file: ./BackEnd/Domains/Products/CreateProduct/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/create-product:latest

  # ðŸ›  Build and Push get-all-categories
  build-and-push-getall:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build and push get-all-categories
        uses: docker/build-push-action@v4
        with:
          context: ./BackEnd/Domains/Categories/GetAllCategories
          file: ./BackEnd/Domains/Categories/GetAllCategories/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/get-all-categories:latest

  # ðŸ›  Build and Push graphql-gateway
  build-and-push-graphql:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build and push graphql-gateway
        uses: docker/build-push-action@v4
        with:
          context: ./BackEnd/Domains/GraphQL-Gateway
          file: ./BackEnd/Domains/GraphQL-Gateway/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/graphql-gateway:latest

  # ðŸš€ Deploy todos los microservicios
  deploy:
    needs:
      - build-and-push-create
      - build-and-push-update
      - build-and-push-delete
      - build-and-push-get-products
      - build-and-push-createproduct
      - build-and-push-getall
      - build-and-push-graphql
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to QA Environment
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_DNS_QA }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            SERVICES=("create-category" "update-category" "delete-category" "get-products-by-category" "create-product" "get-all-categories" "graphql-gateway")
            
            for SERVICE in "${SERVICES[@]}"; do
              echo "Deploying $SERVICE..."
              sudo docker stop $SERVICE || true
              sudo docker rm $SERVICE || true
              sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/$SERVICE:latest
              sudo docker run -d --name $SERVICE --network host \
                -e MONGO_URI="${{ secrets.MONGO_URI }}" \
                -e GRAPHQL_SERVICE_URL="http://${{ secrets.HOST_DNS_GRAPHQL_QA }}/graphql" \
                ${{ secrets.DOCKERHUB_USERNAME }}/$SERVICE:latest
            done
