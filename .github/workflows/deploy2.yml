name: CI/CD Pipeline for employee Services

on:
  push:
    branches:
      - Fix_Merge_Repository

jobs:
  build-and-push-createEmployee:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Build JAR with Maven
        run: |
          cd BackEnd/Domains/Employees/CreateEmployee
          mvn clean package -DskipTests

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME2 }}
          password: ${{ secrets.DOCKERHUB_PASSWORD2 }}

      - name: Build and push create-employee
        uses: docker/build-push-action@v4
        with:
          context: ./BackEnd/Domains/Employees/CreateEmployee
          file: ./BackEnd/Domains/Employees/CreateEmployee/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME2 }}/create-employee:v1

  build-and-push-updateEmployee:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Build JAR with Maven
        run: |
          cd BackEnd/Domains/Employees/UpdateEmployee
          mvn clean package -DskipTests

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME2 }}
          password: ${{ secrets.DOCKERHUB_PASSWORD2 }}

      - name: Build and push update-employee
        uses: docker/build-push-action@v4
        with:
          context: ./BackEnd/Domains/Employees/UpdateEmployee
          file: ./BackEnd/Domains/Employees/UpdateEmployee/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME2 }}/update-employee:v1

  # ✅ Se corrigió la indentación y estructura de build-and-push-frontend
  build-and-push-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Build frontend
        run: npm run build

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME2 }}
          password: ${{ secrets.DOCKERHUB_PASSWORD2 }}

      - name: Build and push frontend
        uses: docker/build-push-action@v4
        with:
          context: ./FrontEnd
          file: ./FrontEnd/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME2 }}/frontend:v1

  deploy-frontend:
    needs: build-and-push-frontend
    runs-on: ubuntu-latest
    steps:
      - name: Deploy Frontend to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_DNS_FRONTEND }}
          username: ${{ secrets.USERNAME2 }}
          key: ${{ secrets.EC2_SSH_KEY2 }}
          script: |
            sudo docker stop frontend || true
            sudo docker rm frontend || true
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME2 }}/frontend:v1
            sudo docker run -d --name frontend -p 80:80 \
              ${{ secrets.DOCKERHUB_USERNAME2 }}/frontend:v1
