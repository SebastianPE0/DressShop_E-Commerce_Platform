version: '3.8'

services:
  # Microservicio para crear productos
  create-product:
    build:
      context: ./BackEnd/Domains/Products/CreateProduct
    container_name: create-product
    environment:
      - MONGO_URI=mongodb+srv://admin:1234PDistribuida@category.dloun.mongodb.net/product_db?retryWrites=true&w=majority
      - APP_PORT=8082
      - GRAPHQL_URL=http://graphql-gateway:8080/graphql  # Agregar esta línea
    ports:
      - "8082:8082"
    depends_on:
      - graphql-gateway  # Asegurar que GraphQL esté disponible antes de iniciar este servicio
    networks:
      - app-network

  # GraphQL Gateway
  graphql-gateway:
    build:
      context: ./BackEnd/Domains/GraphQL-Gateway
    container_name: graphql-gateway
    environment:
      - CATEGORY_SERVICE_URL=http://get-category-by-id:80/category
      - APP_PORT=8080
    ports:
      - "8080:8080"
    depends_on:
      - get-category-by-id
    networks:
      - app-network

  # GetCategories by ID (Ahora corre en el puerto 80)
  get-category-by-id:
    build:
      context: ./BackEnd/Domains/Categories/GetCategoryById
    container_name: get-category-by-id
    environment:
      - MONGO_URI=mongodb+srv://admin:1234PDistribuida@category.dloun.mongodb.net/category_db?retryWrites=true&w=majority
      - APP_PORT=80
    ports:
      - "80:80"
=======
  # Microservicio de Autenticación (AWS Cognito)
  auth-service:
    build:
      context: ./BackEnd/Domains/Employees/LoginEmployee
    env_file:
      - ./BackEnd/Domains/Employees/LoginEmployee/.env
    ports:
      - "8091:8091"
    networks:
      - app-network

  # Microservicio de Crear Empleados
  employee-create:
    build:
      context: ./BackEnd/Domains/Employees/CreateEmployee
    env_file:
      - ./BackEnd/Domains/Employees/CreateEmployee/.env
    ports:
      - "8090:8090"
    networks:
      - app-network

  # Microservicio de Leer Empleados
  employee-read:
    build:
      context: ./BackEnd/Domains/Employees/GetAllEmployee
    env_file:
      - ./BackEnd/Domains/Employees/GetAllEmployee/.env
    ports:
      - "8094:8094"
    networks:
      - app-network

  # Microservicio de Actualizar Empleados
  employee-update:
    build:
      context: ./BackEnd/Domains/Employees/UpdateEmployee
    env_file:
      - ./BackEnd/Domains/Employees/UpdateEmployee/.env
    ports:
      - "8092:8092"
    networks:
      - app-network

  # Microservicio de Eliminar Empleados
  employee-delete:
    build:
      context: ./BackEnd/Domains/Employees/DeleteEmployee
    env_file:
      - ./BackEnd/Domains/Employees/DeleteEmployee/.env  
    ports:
      - "8093:8093"
    networks:
      - app-network

  # Frontend React
  frontend:
    build:
      context: ./FRONTEND/employee-app
    ports:
      - "5173:80"
    depends_on:
      - auth-service
      - employee-create
      - employee-read
      - employee-update
      - employee-delete
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
