version: "3.9"

services:
  # Base de datos para productos
  mongodb-products:
    image: mongo:latest
    container_name: mongodb-products
    ports:
      - "27017:27017"
    volumes:
      - mongo-products-data:/data/db
    networks:
      - app-network

  # Base de datos para categorías (Nueva)
  mongodb-categories:
    image: mongo:latest
    container_name: mongodb-categories
    ports:
      - "27018:27017"  # Expone el puerto 27018 en la máquina local
    volumes:
      - mongo-categories-data:/data/db
    networks:
      - app-network

  # Microservicio para crear productos
  create-product:
    build:
      context: ./BackEnd/Products/CreateProduct
    container_name: create-product
    environment:
      - MONGO_URI=mongodb://mongodb-products:27017/products_db
      - APP_PORT=8082
      - GRAPHQL_URL=http://graphql-gateway:8080/graphql  # Agregar esta línea
    ports:
      - "8082:8082"
    depends_on:
      - mongodb-products
      - graphql-gateway  # Asegurar que GraphQL esté disponible antes de iniciar este servicio
    networks:
      - app-network

  # Microservicio para obtener productos
  get-products:
    build:
      context: ./BackEnd/Products/GetProducts
    container_name: get-products
    environment:
      - MONGO_URI=mongodb://mongodb-products:27017/products_db
      - APP_PORT=8083
    ports:
      - "8083:8083"
    depends_on:
      - mongodb-products
    networks:
      - app-network

  # Microservicio para eliminar productos
  delete-product:
    build:
      context: ./BackEnd/Products/DeleteProduct
    container_name: delete-product
    environment:
      - MONGO_URI=mongodb://mongodb-products:27017/products_db
      - APP_PORT=8084
    ports:
      - "8084:8084"
    depends_on:
      - mongodb-products
    networks:
      - app-network
  
  # Microservicio para actualizar productos
  update-product:
    build:
      context: ./BackEnd/Products/UpdateProduct
    container_name: update-product
    environment:
      - MONGO_URI=mongodb://mongodb-products:27017/products_db
      - APP_PORT=8085
    ports:
      - "8085:8085"
    depends_on:
      - mongodb-products
    networks:
      - app-network

  # Microservicio para crear categorías (Nueva configuración)
  create-category:
    build:
      context: ./BackEnd/Categories/CreateCategory
    container_name: create-category
    environment:
      - MONGO_URI=mongodb://mongodb-categories:27017/categories_db  # Usa la nueva instancia de MongoDB
      - APP_PORT=8086
    ports:
      - "8086:8086"
    depends_on:
      - mongodb-categories
    networks:
      - app-network

  # GraphQL Gateway
  graphql-gateway:
    build:
      context: ./BackEnd/GraphQL-Gateway
    container_name: graphql-gateway
    environment:
      - CATEGORY_SERVICE_URL=http://get-category-by-id:8087/category
      - APP_PORT=8080
    ports:
      - "8080:8080"
    depends_on:
      - create-category
    networks:
      - app-network
  
  # GetCategories by ID
  get-category-by-id:
    build:
      context: ./BackEnd/Categories/GetCategoryById
    container_name: get-category-by-id
    environment:
      - MONGO_URI=mongodb://mongodb-categories:27017/categories_db
      - APP_PORT=8087
    ports:
      - "8087:8087"
    depends_on:
      - mongodb-categories
    networks:
      - app-network

volumes:
  mongo-products-data:
  mongo-categories-data:

networks:
  app-network:
    driver: bridge
